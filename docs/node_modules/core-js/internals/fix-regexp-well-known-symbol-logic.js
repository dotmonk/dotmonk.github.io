import'../modules/es.regexp.exec.js';import redefine from'./redefine.js';import regexpExec from'./regexp-exec.js';import fails from'./fails.js';import wellKnownSymbol from'./well-known-symbol.js';import createNonEnumerableProperty from'./create-non-enumerable-property.js';const _ref={exports:{}};(function(module,exports){var SPECIES=wellKnownSymbol("species"),RegExpPrototype=RegExp.prototype;module.exports=function(KEY,exec,FORCED,SHAM){var SYMBOL=wellKnownSymbol(KEY),DELEGATES_TO_SYMBOL=!fails(function(){var O={};return O[SYMBOL]=function(){return 7},7!=""[KEY](O)}),DELEGATES_TO_EXEC=DELEGATES_TO_SYMBOL&&!fails(function(){var execCalled=!1,re=/a/;return "split"===KEY&&(re={},re.constructor={},re.constructor[SPECIES]=function(){return re},re.flags="",re[SYMBOL]=/./[SYMBOL]),re.exec=function(){return execCalled=!0,null},re[SYMBOL](""),!execCalled});if(!DELEGATES_TO_SYMBOL||!DELEGATES_TO_EXEC||FORCED){var nativeRegExpMethod=/./[SYMBOL],methods=exec(SYMBOL,""[KEY],function(nativeMethod,regexp,str,arg2,forceStringMethod){var $exec=regexp.exec;return $exec===regexpExec||$exec===RegExpPrototype.exec?DELEGATES_TO_SYMBOL&&!forceStringMethod?{done:!0,value:nativeRegExpMethod.call(regexp,str,arg2)}:{done:!0,value:nativeMethod.call(str,regexp,arg2)}:{done:!1}});redefine(String.prototype,KEY,methods[0]),redefine(RegExpPrototype,SYMBOL,methods[1]);}SHAM&&createNonEnumerableProperty(RegExpPrototype[SYMBOL],"sham",!0);};})(_ref,_ref.exports);var fixRegExpWellKnownSymbolLogic = _ref.exports;export default fixRegExpWellKnownSymbolLogic;