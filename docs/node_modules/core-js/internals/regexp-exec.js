import flags from'./regexp-flags.js';import stickyHelpers from'./regexp-sticky-helpers.js';import shared from'./shared.js';import create from'./object-create.js';import _ref2 from'./internal-state.js';import UNSUPPORTED_DOT_ALL from'./regexp-unsupported-dot-all.js';import UNSUPPORTED_NCG from'./regexp-unsupported-ncg.js';const _ref={exports:{}};(function(module,exports){var getInternalState=_ref2.get,nativeExec=RegExp.prototype.exec,nativeReplace=shared("native-string-replace",String.prototype.replace),patchedExec=nativeExec,UPDATES_LAST_INDEX_WRONG=function(){var re1=/a/,re2=/b*/g;return nativeExec.call(re1,"a"),nativeExec.call(re2,"a"),0!==re1.lastIndex||0!==re2.lastIndex}(),UNSUPPORTED_Y=stickyHelpers.UNSUPPORTED_Y||stickyHelpers.BROKEN_CARET,NPCG_INCLUDED=/()??/.exec("")[1]!==void 0,PATCH=UPDATES_LAST_INDEX_WRONG||NPCG_INCLUDED||UNSUPPORTED_Y||UNSUPPORTED_DOT_ALL||UNSUPPORTED_NCG;PATCH&&(patchedExec=function exec(str){var result,reCopy,lastIndex,match,i,object,group,re=this,state=getInternalState(re),raw=state.raw;if(raw)return raw.lastIndex=re.lastIndex,result=patchedExec.call(raw,str),re.lastIndex=raw.lastIndex,result;var groups=state.groups,sticky=UNSUPPORTED_Y&&re.sticky,flags$1=flags.call(re),source=re.source,charsAdded=0,strCopy=str;if(sticky&&(flags$1=flags$1.replace("y",""),-1===flags$1.indexOf("g")&&(flags$1+="g"),strCopy=String(str).slice(re.lastIndex),0<re.lastIndex&&(!re.multiline||re.multiline&&"\n"!==str[re.lastIndex-1])&&(source="(?: "+source+")",strCopy=" "+strCopy,charsAdded++),reCopy=new RegExp("^(?:"+source+")",flags$1)),NPCG_INCLUDED&&(reCopy=new RegExp("^"+source+"$(?!\\s)",flags$1)),UPDATES_LAST_INDEX_WRONG&&(lastIndex=re.lastIndex),match=nativeExec.call(sticky?reCopy:re,strCopy),sticky?match?(match.input=match.input.slice(charsAdded),match[0]=match[0].slice(charsAdded),match.index=re.lastIndex,re.lastIndex+=match[0].length):re.lastIndex=0:UPDATES_LAST_INDEX_WRONG&&match&&(re.lastIndex=re.global?match.index+match[0].length:lastIndex),NPCG_INCLUDED&&match&&1<match.length&&nativeReplace.call(match[0],reCopy,function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(match[i]=void 0);}),match&&groups)for(match.groups=object=create(null),i=0;i<groups.length;i++)group=groups[i],object[group[0]]=match[group[1]];return match}),module.exports=patchedExec;})(_ref,_ref.exports);var regexpExec = _ref.exports;export default regexpExec;